Project abstract:In 591 project, we built an NBA Feed App which can report real-time statistics of certain player and team depending on user’s preference. However, this program can only present information in texts and runs at a local computer.Nowadays, web application is the mainstream for software deployment in the connected world. In this project, we would like to turn our application into a real web application with more information(such as pictures and video links) integrated inside. Our goal is to let users access the NBA Feed App anywhere, anytime and enjoy the fun of interacting with real-time information.GitHub Repo:
https://github.com/EddieYT/WebSportsFeed.gitNames of the members of the teamObi Asinugo, Eddie Tsai						 						 							A short work breakdown 	Obi:Implement 3 controllers to handle requests pertaining to NBA teams.Build the infrastructure of models in Spring, including the design and implementation of interfaces for Game, Record, Player and Standings.Design an algorithm to select top 30 impact players with advanced data structure. Construct improved user interface within web framework, including all templates for team, standing and top30 players.Eddie: Implement the APIHandler for making requests to the API and get corresponding responses.Create 3 controllers to handle requests from home page, search bars and player page. Build the PlayerStatsParser to parse JSON String and complete the functions of search bars.Implement the interface for ImpactMatrix and construct improved user interface within web framework.• At least 2 of the following:o Interfaces (Define and use)5 Interfaces:Game: define the basic behaviors of a sport game, implemented as NbaGame.Player: define the basic behaviors of a sport player, implemented as NbaPlayer.Record: define the basic behaviors of a team record, implemented as NbaRecord.Standing: define the basic behaviors of a league’s standing, implemented as NbaStandings.ImpactMatrix:define the basic behaviors of a weighting formula, implemented as OurImpactMatrix.o Design Patterns Model-View-Controller, Dependency Injection.• Both of the following:o Data Structures (at least three different kinds)Priority Queue(LeagueStats), HashMap(TeamStats) and ArrayList(NbaPlayerRepository)o Advanced Topics (Java Graphics, Multithreading, etc.)Spring Web Framework, JSON Parsing and Dependency Management.